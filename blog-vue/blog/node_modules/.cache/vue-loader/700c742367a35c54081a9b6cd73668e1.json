{"remainingRequest":"E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\src\\views\\edit\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\src\\views\\edit\\Edit.vue","mtime":1672195321170},{"path":"E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2023holiday\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
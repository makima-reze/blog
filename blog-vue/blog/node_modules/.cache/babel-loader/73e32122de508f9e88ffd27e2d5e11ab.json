{"remainingRequest":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js!E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\src\\views\\edit\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\src\\views\\edit\\Edit.vue","mtime":1671957464245},{"path":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2023寒假\\java\\demo\\demo3-blog-X1192176811\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"banner\" :style=\"cover\">\r\n      <h1 class=\"banner-title\">新增文章</h1>\r\n    </div>\r\n    <v-card class=\"blog-container\">\r\n      <div class=\"title\">{{ this.$route.name }}</div>\r\n      <div class=\"article-title-container\">\r\n        <el-input\r\n          v-model=\"article.articleTitle\"\r\n          size=\"medium\"\r\n          placeholder=\"输入文章标题\"\r\n        />\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"medium\"\r\n          class=\"save-btn\"\r\n          @click=\"saveArticleDraft\"\r\n          v-if=\"article.id == null || article.status == 3\"\r\n        >\r\n          保存草稿\r\n        </el-button>\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"medium\"\r\n          @click=\"openModel\"\r\n          style=\"margin-left: 10px\"\r\n        >\r\n          发布文章\r\n        </el-button>\r\n      </div>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as imageConversion from \"image-conversion\";\r\nexport default {\r\n  created() {\r\n    const path = this.$route.path;\r\n    const arr = path.split(\"/\");\r\n    const articleId = arr[2];\r\n    if (articleId) {\r\n      this.axios.get(\"/api/articles/\" + articleId).then(({ data }) => {\r\n        this.article = data.data;\r\n      });\r\n    } else {\r\n      const article = sessionStorage.getItem(\"article\");\r\n      if (article) {\r\n        this.article = JSON.parse(article);\r\n      }\r\n    }\r\n  },\r\n  destroyed() {\r\n    //文章自动保存功能\r\n    this.autoSaveArticle();\r\n  },\r\n  data: function () {\r\n    return {\r\n      addOrEdit: false,\r\n      autoSave: true,\r\n      categoryName: \"\",\r\n      tagName: \"\",\r\n      categoryList: [],\r\n      tagList: [],\r\n      typeList: [\r\n        {\r\n          type: 1,\r\n          desc: \"原创\",\r\n        },\r\n        {\r\n          type: 2,\r\n          desc: \"转载\",\r\n        },\r\n        {\r\n          type: 3,\r\n          desc: \"翻译\",\r\n        },\r\n      ],\r\n      article: {\r\n        id: null,\r\n        articleTitle: this.$moment(new Date()).format(\"YYYY-MM-DD\"),\r\n        articleContent: \"\",\r\n        articleCover: \"\",\r\n        categoryName: null,\r\n        tagNameList: [],\r\n        originalUrl: \"\",\r\n        isTop: 0,\r\n        type: 1,\r\n        status: 1,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    listCategories() {\r\n      this.axios.get(\"/api/categories/search\").then(({ data }) => {\r\n        this.categoryList = data.data;\r\n      });\r\n    },\r\n    listTags() {\r\n      this.axios.get(\"/api/tags/search\").then(({ data }) => {\r\n        this.tagList = data.data;\r\n      });\r\n    },\r\n    openModel() {\r\n      if (this.article.articleTitle.trim() == \"\") {\r\n        this.$message.error(\"文章标题不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.articleContent.trim() == \"\") {\r\n        this.$message.error(\"文章内容不能为空\");\r\n        return false;\r\n      }\r\n      this.listCategories();\r\n      this.listTags();\r\n      this.addOrEdit = true;\r\n    },\r\n    uploadCover(response) {\r\n      this.article.articleCover = response.data;\r\n    },\r\n    beforeUpload(file) {\r\n      return new Promise((resolve) => {\r\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\r\n          resolve(file);\r\n        }\r\n        // 压缩到200KB,这里的200就是要压缩的大小,可自定义\r\n        imageConversion\r\n          .compressAccurately(file, this.config.UPLOAD_SIZE)\r\n          .then((res) => {\r\n            resolve(res);\r\n          });\r\n      });\r\n    },\r\n    uploadImg(pos, file) {\r\n      var formdata = new FormData();\r\n      if (file.size / 1024 < this.config.UPLOAD_SIZE) {\r\n        formdata.append(\"file\", file);\r\n        this.axios.post(\"/api/articles/images\", formdata).then(({ data }) => {\r\n          this.$refs.md.$img2Url(pos, data.data);\r\n        });\r\n      } else {\r\n        // 压缩到200KB,这里的200就是要压缩的大小,可自定义\r\n        imageConversion\r\n          .compressAccurately(file, this.config.UPLOAD_SIZE)\r\n          .then((res) => {\r\n            formdata.append(\r\n              \"file\",\r\n              new window.File([res], file.name, { type: file.type })\r\n            );\r\n            this.axios\r\n              .post(\"/api/articles/images\", formdata)\r\n              .then(({ data }) => {\r\n                this.$refs.md.$img2Url(pos, data.data);\r\n              });\r\n          });\r\n      }\r\n    },\r\n    saveArticleDraft() {\r\n      if (this.article.articleTitle.trim() == \"\") {\r\n        this.$message.error(\"文章标题不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.articleContent.trim() == \"\") {\r\n        this.$message.error(\"文章内容不能为空\");\r\n        return false;\r\n      }\r\n      this.article.status = 3;\r\n      this.axios.post(\"/api/articles\", this.article).then(({ data }) => {\r\n        if (data.flag) {\r\n          if (this.article.id === null) {\r\n            this.$store.commit(\"removeTab\", \"发布文章\");\r\n          } else {\r\n            this.$store.commit(\"removeTab\", \"修改文章\");\r\n          }\r\n          sessionStorage.removeItem(\"article\");\r\n          this.$router.push({ path: \"/article-list\" });\r\n          this.$notify.success({\r\n            title: \"成功\",\r\n            message: \"保存草稿成功\",\r\n          });\r\n        } else {\r\n          this.$notify.error({\r\n            title: \"失败\",\r\n            message: \"保存草稿失败\",\r\n          });\r\n        }\r\n      });\r\n\r\n      //关闭自动保存功能\r\n      this.autoSave = false;\r\n    },\r\n    saveOrUpdateArticle() {\r\n      if (this.article.articleTitle.trim() == \"\") {\r\n        this.$message.error(\"文章标题不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.articleContent.trim() == \"\") {\r\n        this.$message.error(\"文章内容不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.categoryName == null) {\r\n        this.$message.error(\"文章分类不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.tagNameList.length == 0) {\r\n        this.$message.error(\"文章标签不能为空\");\r\n        return false;\r\n      }\r\n      if (this.article.articleCover.trim() == \"\") {\r\n        this.$message.error(\"文章封面不能为空\");\r\n        return false;\r\n      }\r\n      this.axios.post(\"/api/articles\", this.article).then(({ data }) => {\r\n        if (data.flag) {\r\n          if (this.article.id === null) {\r\n            this.$store.commit(\"removeTab\", \"发布文章\");\r\n          } else {\r\n            this.$store.commit(\"removeTab\", \"修改文章\");\r\n          }\r\n          sessionStorage.removeItem(\"article\");\r\n          this.$router.push({ path: \"/article-list\" });\r\n          this.$notify.success({\r\n            title: \"成功\",\r\n            message: data.message,\r\n          });\r\n        } else {\r\n          this.$notify.error({\r\n            title: \"失败\",\r\n            message: data.message,\r\n          });\r\n        }\r\n        this.addOrEdit = false;\r\n      });\r\n      //关闭自动保存功能\r\n      this.autoSave = false;\r\n    },\r\n    autoSaveArticle() {\r\n      // 自动上传文章\r\n      if (\r\n        this.autoSave &&\r\n        this.article.articleTitle.trim() != \"\" &&\r\n        this.article.articleContent.trim() != \"\" &&\r\n        this.article.id != null\r\n      ) {\r\n        this.axios.post(\"/api/articles\", this.article).then(({ data }) => {\r\n          if (data.flag) {\r\n            this.$notify.success({\r\n              title: \"成功\",\r\n              message: \"自动保存成功\",\r\n            });\r\n          } else {\r\n            this.$notify.error({\r\n              title: \"失败\",\r\n              message: \"自动保存失败\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n      // 保存本地文章记录\r\n      if (this.autoSave && this.article.id == null) {\r\n        sessionStorage.setItem(\"article\", JSON.stringify(this.article));\r\n      }\r\n    },\r\n    searchCategories(keywords, cb) {\r\n      this.axios\r\n        .get(\"/api/categories/search\", {\r\n          params: {\r\n            keywords: keywords,\r\n          },\r\n        })\r\n        .then(({ data }) => {\r\n          cb(data.data);\r\n        });\r\n    },\r\n    handleSelectCategories(item) {\r\n      this.addCategory({\r\n        categoryName: item.categoryName,\r\n      });\r\n    },\r\n    saveCategory() {\r\n      if (this.categoryName.trim() != \"\") {\r\n        this.addCategory({\r\n          categoryName: this.categoryName,\r\n        });\r\n        this.categoryName = \"\";\r\n      }\r\n    },\r\n    addCategory(item) {\r\n      this.article.categoryName = item.categoryName;\r\n    },\r\n    removeCategory() {\r\n      this.article.categoryName = null;\r\n    },\r\n    searchTags(keywords, cb) {\r\n      this.axios\r\n        .get(\"/api/tags/search\", {\r\n          params: {\r\n            keywords: keywords,\r\n          },\r\n        })\r\n        .then(({ data }) => {\r\n          cb(data.data);\r\n        });\r\n    },\r\n    handleSelectTag(item) {\r\n      this.addTag({\r\n        tagName: item.tagName,\r\n      });\r\n    },\r\n    saveTag() {\r\n      if (this.tagName.trim() != \"\") {\r\n        this.addTag({\r\n          tagName: this.tagName,\r\n        });\r\n        this.tagName = \"\";\r\n      }\r\n    },\r\n    addTag(item) {\r\n      if (this.article.tagNameList.indexOf(item.tagName) == -1) {\r\n        this.article.tagNameList.push(item.tagName);\r\n      }\r\n    },\r\n    removeTag(item) {\r\n      const index = this.article.tagNameList.indexOf(item);\r\n      this.article.tagNameList.splice(index, 1);\r\n    },\r\n  },\r\n  computed: {\r\n    tagClass() {\r\n      return function (item) {\r\n        const index = this.article.tagNameList.indexOf(item.tagName);\r\n        return index != -1 ? \"tag-item-select\" : \"tag-item\";\r\n      };\r\n    },\r\n    cover() {\r\n      var cover = \"\";\r\n      this.$store.state.blogInfo.pageList.forEach((item) => {\r\n        if (item.pageLabel == \"link\") {\r\n          cover = item.pageCover;\r\n        }\r\n      });\r\n      return \"background: url(\" + cover + \") center center / cover no-repeat\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.article-title-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1.25rem;\r\n  margin-top: 2.25rem;\r\n}\r\n.save-btn {\r\n  margin-left: 0.75rem;\r\n  background: #fff;\r\n  color: #f56c6c;\r\n}\r\n.tag-item {\r\n  margin-right: 1rem;\r\n  margin-bottom: 1rem;\r\n  cursor: pointer;\r\n}\r\n.tag-item-select {\r\n  margin-right: 1rem;\r\n  margin-bottom: 1rem;\r\n  cursor: not-allowed;\r\n  color: #ccccd8 !important;\r\n}\r\n.category-item {\r\n  cursor: pointer;\r\n  padding: 0.6rem 0.5rem;\r\n}\r\n.category-item:hover {\r\n  background-color: #f0f9eb;\r\n  color: #67c23a;\r\n}\r\n.popover-title {\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n}\r\n.popover-container {\r\n  margin-top: 1rem;\r\n  height: 260px;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/edit"}]}